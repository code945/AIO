<?php

namespace backend\controllers;

use common\helper\HttpHelper;
use common\models\TagSearchModel;
use Symfony\Component\HttpFoundation\Tests\StringableObject;
use Yii;
use common\models\Tag;
use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\Response;

/**
 * TagController implements the CRUD actions for Tag model.
 */
class FileController extends Controller
{
    /**
     * @inheritdoc
     */
//    public function behaviors()
//    {
//        return [
//            'verbs' => [
//                'class' => VerbFilter::className(),
//                'actions' => [
//                    'delete' => ['POST'],
//                    'query' => ['POST','GET'],
//                ],
//            ],
//        ];
//    }

    public function beforeAction($action)
    {
        if($action->id == 'query')
            $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }



    public function actionUpload()
    {
        $r=[];
        // $p1 $p2是我们处理完图片之后需要返回的信息，其参数意义可参考上面的讲解
        $p1 = $p2 = [];
        if (empty($_FILES['file-input']['name'])) {
            echo '{}';
            return;
        }

        // 循环多张商品banner图进行上传和上传后的处理
        for ($i = 0; $i < count($_FILES['file-input']['name']); $i++) {
            // 上传之后的商品图是可以进行删除操作的，我们为每一个商品成功的商品图指定删除操作的地址
            $url = '/banner/delete';

            // 调用图片接口上传后返回的图片地址，注意是可访问到的图片地址哦
            $imageUrl = '';

            $file = $_FILES['file-input'];

            $dir = Yii::getAlias("@uploads/".date("Ymd"));
            if (!is_dir($dir))
                mkdir($dir);

            $tmp_name=$file["tmp_name"];
            
            //文件名
            $fileName = date("HiiHsHis").$file["name"];
            $savedir = $dir."/". $fileName;
            move_uploaded_file($tmp_name,$savedir);
            $url = Yii::getAlias("@uploadUrl/".date("Ymd")."/". $fileName);
            $key = $url;
            $p1[$i] = '<img src="'.$url.'" class="file-preview-image">';
            $p2[$i] = ['url' => $url, 'key' => $key];
        }


        Yii::$app->response->format = Response::FORMAT_JSON;
        return [
            'initialPreview' => $p1,
            'initialPreviewConfig' => $p2, 
        ];
    }


    /**
     * Deletes an existing Tag model.
     * If deletion is successful, the browser will be redirected to the 'index' page
     * @return mixed
     */
    public function actionList()
    {
        $files =  array();
        $this->get_allfiles(Yii::getAlias("@uploads"),$files);
        Yii::$app->response->format = Response::FORMAT_JSON;
        return [
            'list' => $files,
        ];
    }


    public function actionDelete()
    {
        $parm =  HttpHelper::getParams('file');
        $file = str_replace(Yii::getAlias("@uploadUrl"),Yii::getAlias("@uploads"),$parm);
        $result = @unlink ($file);
        Yii::$app->response->format = Response::FORMAT_JSON;
        return [
            'result' => $result,
        ];
    }


    /**
     * @param $path string
     * @param $files
     */
    function get_allfiles($path, &$files) {
        if(is_dir($path)){
            $dp = dir($path);
            while ($file = $dp ->read()){
                if($file !="." && $file !=".."){
                    $this->get_allfiles($path."/".$file, $files);
                }
            }
            $dp ->close();
        }
        if(is_file($path)){
            $files[] = str_replace(Yii::getAlias("@uploads"),Yii::getAlias("@uploadUrl"),$path) ;
        }
    }
}
