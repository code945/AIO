<?php

namespace modules\user\controllers;

use common\actions\DeleteAction;
use common\helper\HttpHelper;
use common\models\User;
use common\models\UserSearchModel;
use kartik\grid\EditableColumnAction;
use Yii;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\Response;

/**
 * Default controller for the `user` module
 */
class DefaultController extends Controller
{
 
    public function actions()
    {
        return ArrayHelper::merge(parent::actions(), [

            'editInline' => [                                       // identifier for your editable column action
                'class' => EditableColumnAction::className(),     // action class name
                'modelClass' => User::className(),                // the model for the record being edited
                'outputValue' => function ($model, $attribute, $key, $index) {
                    if($attribute == 'status')
                    {
                        return  User::STATUS_LABEL[$model->$attribute];
                    }
                    return  $model->$attribute;      // return any custom output value if desired
                },
                'outputMessage' => function($model, $attribute, $key, $index) {
                    return '';                                  // any custom error to return after model save
                },
                'showModelErrors' => true,                        // show model validation errors after save
                'errorOptions' => ['header' => '']                // error summary HTML options
            ],

        ]);
    }


    public function beforeAction($action)
    {
        if($action->id == 'batch-setstatus')
            $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


    /**
     * Renders the index view for the module
     * @return string
     */
    public function actionIndex()
    {
        $searchModel = new UserSearchModel();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionBatchSetstatus()
    {
        $request = Yii::$app->request;
        $post = $request->post();
        $post_id = HttpHelper::getParams('ids');
        $status_id = HttpHelper::getParams('status');
        $ids = explode(',',$post_id);
        User::updateAll(['status'=>$status_id],['id'=>$ids]);
        Yii::$app->response->format = Response::FORMAT_JSON;
        return ['error_code'=>1,'msg'=>'success'];
    }
 

}
